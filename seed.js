require('dotenv').config();
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');

// Import models
const User = require('./models/User');
const Supplier = require('./models/Supplier');
const Product = require('./models/Product');

// Import database connection
const connectDB = require('./config/database');

// Sample data
const seedData = {
  users: [
    {
      username: 'admin1',
      email: 'admin1@example.com',
      phone: '0123456789',
      password: 'admin123',
      role: 'admin'
    },
    {
      username: 'user1',
      email: 'user1@example.com',
      phone: '0987654321',
      password: 'user123',
      role: 'user'
    },
    {
      username: 'nguyentuananh',
      email: 'tuananh@example.com',
      phone: '0123456788',
      password: '22707991',
      role: 'admin'
    }
  ],

  suppliers: [
    {
      name: 'C√¥ng ty TNHH Samsung Electronics Vi·ªát Nam',
      address: 'Khu C√¥ng ngh·ªá cao, Qu·∫≠n 9, TP.HCM',
      phone: '02838961000',
      email: 'samsung@samsung.vn',
      description: 'Nh√† s·∫£n xu·∫•t thi·∫øt b·ªã ƒëi·ªán t·ª≠ h√†ng ƒë·∫ßu th·∫ø gi·ªõi'
    },
    {
      name: 'Apple Vietnam',
      address: 'T·∫ßng 14, T√≤a nh√† Vincom Center, Qu·∫≠n 1, TP.HCM',
      phone: '02839141888',
      email: 'contact@apple.vn',
      description: 'C√¥ng ty c√¥ng ngh·ªá n·ªïi ti·∫øng v·ªõi c√°c s·∫£n ph·∫©m iPhone, iPad, MacBook'
    },
    {
      name: 'C√¥ng ty C·ªï ph·∫ßn Th·∫ø Gi·ªõi Di ƒê·ªông',
      address: '128 Tr·∫ßn Quang Kh·∫£i, Qu·∫≠n 1, TP.HCM',
      phone: '02835260000',
      email: 'info@thegioididong.com',
      description: 'H·ªá th·ªëng b√°n l·∫ª thi·∫øt b·ªã di ƒë·ªông v√† ƒëi·ªán m√°y l·ªõn nh·∫•t Vi·ªát Nam'
    },
    {
      name: 'FPT Shop',
      address: 'T√≤a nh√† FPT, C·∫ßu Gi·∫•y, H√† N·ªôi',
      phone: '02473007000',
      email: 'fptshop@fpt.com.vn',
      description: 'Chu·ªói c·ª≠a h√†ng b√°n l·∫ª c√¥ng ngh·ªá c·ªßa T·∫≠p ƒëo√†n FPT'
    },
    {
      name: 'Xiaomi Vietnam',
      address: 'T·∫ßng 12, T√≤a nh√† VTC Online, Qu·∫≠n C·∫ßu Gi·∫•y, H√† N·ªôi',
      phone: '02473073000',
      email: 'xiaomi@mi.com',
      description: 'Th∆∞∆°ng hi·ªáu c√¥ng ngh·ªá t·ª´ Trung Qu·ªëc v·ªõi c√°c s·∫£n ph·∫©m gi√° t·ªët'
    }
  ],

  products: [
    {
      name: 'iPhone 15 Pro Max 256GB',
      price: 34990000,
      quantity: 25,
      category: 'Smartphone',
      description: 'iPhone m·ªõi nh·∫•t v·ªõi chip A17 Pro, camera 48MP v√† m√†n h√¨nh Super Retina XDR',
      sku: 'IP15PM256'
    },
    {
      name: 'Samsung Galaxy S24 Ultra 512GB',
      price: 32990000,
      quantity: 30,
      category: 'Smartphone',
      description: 'Galaxy S24 Ultra v·ªõi S Pen, camera 200MP v√† m√†n h√¨nh Dynamic AMOLED 2X',
      sku: 'SGS24U512'
    },
    {
      name: 'MacBook Pro 14" M3 Pro',
      price: 54990000,
      quantity: 15,
      category: 'Laptop',
      description: 'MacBook Pro v·ªõi chip M3 Pro, m√†n h√¨nh Liquid Retina XDR v√† th·ªùi l∆∞·ª£ng pin d√†i',
      sku: 'MBP14M3P'
    },
    {
      name: 'iPad Pro 12.9" M2 256GB',
      price: 28990000,
      quantity: 20,
      category: 'Tablet',
      description: 'iPad Pro v·ªõi chip M2, m√†n h√¨nh Liquid Retina XDR v√† h·ªó tr·ª£ Apple Pencil',
      sku: 'IPADP129M2'
    },
    {
      name: 'Xiaomi 14 Ultra 512GB',
      price: 24990000,
      quantity: 40,
      category: 'Smartphone',
      description: 'Xiaomi 14 Ultra v·ªõi camera Leica, chip Snapdragon 8 Gen 3',
      sku: 'MI14U512'
    },
    {
      name: 'Samsung Galaxy Book4 Pro',
      price: 32990000,
      quantity: 12,
      category: 'Laptop',
      description: 'Laptop Samsung v·ªõi m√†n h√¨nh AMOLED, chip Intel Core th·∫ø h·ªá 14',
      sku: 'SGB4PRO'
    },
    {
      name: 'AirPods Pro (3rd generation)',
      price: 6290000,
      quantity: 50,
      category: 'Audio',
      description: 'Tai nghe kh√¥ng d√¢y v·ªõi ch·ªëng ·ªìn ch·ªß ƒë·ªông v√† √¢m thanh Spatial Audio',
      sku: 'APPRO3'
    },
    {
      name: 'Apple Watch Series 9 GPS 45mm',
      price: 10990000,
      quantity: 35,
      category: 'Smartwatch',
      description: 'Apple Watch v·ªõi chip S9 SiP, m√†n h√¨nh Always-On Retina',
      sku: 'AWS9GPS45'
    },
    {
      name: 'Samsung Galaxy Watch6 Classic',
      price: 8990000,
      quantity: 25,
      category: 'Smartwatch',
      description: 'Smartwatch Samsung v·ªõi bezel xoay, theo d√µi s·ª©c kh·ªèe to√†n di·ªán',
      sku: 'SGW6CL'
    },
    {
      name: 'Xiaomi Redmi Note 13 Pro',
      price: 7990000,
      quantity: 60,
      category: 'Smartphone',
      description: 'Smartphone t·∫ßm trung v·ªõi camera 200MP, s·∫°c nhanh 67W',
      sku: 'RN13PRO'
    },
    {
      name: 'Microsoft Surface Laptop 5',
      price: 29990000,
      quantity: 18,
      category: 'Laptop',
      description: 'Laptop Surface v·ªõi thi·∫øt k·∫ø premium, chip Intel Core th·∫ø h·ªá 12',
      sku: 'MSL5'
    },
    {
      name: 'Sony WH-1000XM5',
      price: 8490000,
      quantity: 30,
      category: 'Audio',
      description: 'Tai nghe ch·ªëng ·ªìn h√†ng ƒë·∫ßu v·ªõi ch·∫•t l∆∞·ª£ng √¢m thanh Hi-Res',
      sku: 'SXWH1000XM5'
    }
  ]
};

async function seedDatabase() {
  try {
    console.log('üå± B·∫Øt ƒë·∫ßu seed database...');
    
    // Connect to database
    await connectDB();
    
    // Clear existing data
    console.log('üóëÔ∏è X√≥a d·ªØ li·ªáu c≈©...');
    await User.deleteMany({});
    await Supplier.deleteMany({});
    await Product.deleteMany({});
    
    // Create users with hashed passwords
    console.log('üë§ T·∫°o users...');
    const users = [];
    for (const userData of seedData.users) {
      const salt = await bcrypt.genSalt(12);
      const hashedPassword = await bcrypt.hash(userData.password, salt);
      
      const user = new User({
        ...userData,
        password: hashedPassword
      });
      
      await user.save();
      users.push(user);
      console.log(`   ‚úÖ Created user: ${user.username} (${user.role})`);
    }
    
    // Create suppliers
    console.log('üè≠ T·∫°o suppliers...');
    const suppliers = [];
    for (const supplierData of seedData.suppliers) {
      const supplier = new Supplier(supplierData);
      await supplier.save();
      suppliers.push(supplier);
      console.log(`   ‚úÖ Created supplier: ${supplier.name}`);
    }
    
    // Create products
    console.log('üì¶ T·∫°o products...');
    const products = [];
    for (let i = 0; i < seedData.products.length; i++) {
      const productData = seedData.products[i];
      // Assign random supplier to each product
      const randomSupplier = suppliers[i % suppliers.length];
      
      const product = new Product({
        ...productData,
        supplier: randomSupplier._id
      });
      
      await product.save();
      products.push(product);
      console.log(`   ‚úÖ Created product: ${product.name} - ${product.price.toLocaleString('vi-VN')}ƒë`);
    }
    
    // Show summary
    console.log('\nüìä T√≥m t·∫Øt d·ªØ li·ªáu ƒë√£ t·∫°o:');
    console.log(`   üë§ Users: ${users.length}`);
    console.log(`   üè≠ Suppliers: ${suppliers.length}`);
    console.log(`   üì¶ Products: ${products.length}`);
    
    console.log('\nüîê Th√¥ng tin ƒëƒÉng nh·∫≠p:');
    console.log('   Admin:');
    console.log('     Username: admin');
    console.log('     Password: admin123');
    console.log('   ');
    console.log('   Student Account:');
    console.log('     Username: nguyentuananh');
    console.log('     Password: 22707991');
    console.log('   ');
    console.log('   User:');
    console.log('     Username: user1');
    console.log('     Password: user123');
    
    console.log('\n‚úÖ Seed database th√†nh c√¥ng!');
    console.log('üöÄ B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ch·∫°y ·ª©ng d·ª•ng v√† ƒëƒÉng nh·∫≠p v·ªõi c√°c t√†i kho·∫£n tr√™n');
    
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå L·ªói khi seed database:', error);
    process.exit(1);
  }
}

// Run seed function if called directly
if (require.main === module) {
  seedDatabase();
}

module.exports = seedDatabase;